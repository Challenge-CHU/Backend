services:
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - $HOME/.docker/config.json/:/config.json
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --label-enable

  traefik:
    image: "traefik:v2.6"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=postmaster@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik-ui.entrypoints=websecure
      - traefik.http.routers.traefik-ui.rule=Host(`traefik.alan-courtois.fr`)
      - traefik.http.routers.traefik-ui.tls.certresolver=myresolver
      - traefik.http.routers.traefik-ui.service=api@internal
      - traefik.http.middlewares.infra-basic-auth.basicauth.users=${TRAEFIK_AUTH}
      - traefik.http.middlewares.infra-basic-auth.basicauth.realm="Infra"
      - "traefik.http.routers.traefik-ui.middlewares=infra-basic-auth"
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https
      - traefik.docker.network=internet
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - internet

networks:
  internet:
    driver: bridge
    name: custom_frontend